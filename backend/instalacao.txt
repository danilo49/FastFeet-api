// crio projeto
// dentro da pasta abro terminal, dentro dou
// ğŸ–¥ yarn init -y  para criar o projeto
// ğŸ–¥ code .
// ğŸ–¥ yarn add express
// ğŸ–¥ yarn add sucrase nodemon -D  //vai permitir a sintaxe nova import tal from ' ' e export default routes
// apÃ³s instalar o docker executar o seguinte comando para criar a image do SQL que deseja usar, no caso Postgres PORTA PADRAO 5432
// ğŸ–¥ docker run --name fastfeet -e POSTGRES_PASSWORD=docker -p 5433:5432 -d postgres
// instalar ğŸ–¥ postbird para visualizar querys
// Utilizando ESLint com padrÃ£o airbnb
// ğŸ–¥ yarn add eslint -D
// ğŸ–¥ yarn eslint --init
// selecionar as seguintes opcÃµes:
// -To check syntax, find problems, and enforce code style
// -JavaScript modules (import/export)
// -None of these
// -nÃ£o utilizo TypeScript PARA ESTA APLICAÃ‡ÃƒO
// -com espaÃ§o desmarco browser e seleciono no Node com espaÃ§o novamente
// -Use a popular style guide
// -Airbnb: https://github.com/airbnb/javascript
// -JavaScript
// -Y
// ** Se estiver utilizando apenas Yarn e nÃ£o NPM, excluir o arquivo package-lock.json que foi criado na estrutura do projeto
// ğŸ–¥ yarn       para fazer mapeamento das novas dependencias
// ** altere as configuraÃ§Ãµes do arquivo criado na extrutura chamado ğŸ–¥ .eslintrc.js
// apÃ³s isto vamos instalar o Prettier com integraÃ§Ã£o ao ESLint
// ğŸ–¥ yarn add prettier eslint-config-prettier eslint-plugin-prettier -D
// insira o arquivo ğŸ–¥ .prettierrc na estrutura do codigo
// dou um ğŸ–¥ yarn eslint --fix src --ext .js para organizar os arquivos js ja criados
// ir na raiz do projeto, clicar com direito e ir em generator .editorconfig (plugin editorconfig precisa estar instalado)
// no arquivo ğŸ–¥ .editorconfig alterar trim_trailing ... para true e insert_final_newline para true
// ğŸ–¥ yarn add sequelize
// ğŸ–¥ yarn add sequelize-cli -D
// crie e configure o arquivo ğŸ–¥ .sequelizerc
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

